[{"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\index.js":"1","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\App.js":"2","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\reportWebVitals.js":"3","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Navbar\\Navbar.jsx":"4","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Navbar\\Button.jsx":"5","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Home.jsx":"6","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Produkte.jsx":"7","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Warenkorb.jsx":"8","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Liste.jsx":"9","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Checkout.jsx":"10","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Services.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1217,"mtime":1612548852589,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1159,"mtime":1612530403189,"results":"16","hashOfConfig":"13"},{"size":1037,"mtime":1612533798836,"results":"17","hashOfConfig":"13"},{"size":670,"mtime":1612300535549,"results":"18","hashOfConfig":"13"},{"size":2417,"mtime":1612612654847,"results":"19","hashOfConfig":"13"},{"size":3370,"mtime":1612537325795,"results":"20","hashOfConfig":"13"},{"size":3401,"mtime":1612494186293,"results":"21","hashOfConfig":"13"},{"size":5060,"mtime":1612613722902,"results":"22","hashOfConfig":"13"},{"size":1728,"mtime":1612207583089,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kgbwlf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\index.js",[],["51","52"],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\App.js",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\reportWebVitals.js",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Navbar\\Navbar.jsx",["53","54"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"./Button\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\n//Navigationsleiste mit Attributen und einem Button für den Warenkorb\r\nconst Navbar = (props) => {\r\n  const ItemInCart = props.cartLists; \r\n  {/*Da der Button in der Navbar eine einzelne Komponente ist, muss dieser an Button.jsx weitergegeben werden.*/}\r\n\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\" className=\"fas fa-coffee\"></Link>\r\n        <h4>Kaffeetastisch</h4>\r\n      </div>\r\n      <ul className=\"bar\">\r\n        <li className=\"component\">\r\n          <Link to=\"/\" className=\"links\">\r\n            <h3>Home</h3>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"component\">\r\n          <Link to=\"/produkte\" className=\"links\">\r\n            <h3>Produkte</h3>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"component\">\r\n          <Link to=\"/services\" className=\"links\">\r\n            <h3>Services</h3>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <Button ItemInCart={ItemInCart} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Navbar\\Button.jsx",["55"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Button.css\";\r\n\r\n\r\n//Funktion die einen Button für einen Warenkorb generiert (mit Icon)\r\n\r\n\r\nexport function Button(props) {\r\n  const ItemInCartCounter = props.ItemInCart;\r\n  {\r\n    /*counter enthält nun die \"Länge\" bzw. die Anzahl der im Warenkorb befindlichen Items.*/\r\n  }\r\n\r\n  //Diese Funktion zählt jedes Element und und speichert es in totalCount\r\n  //Um die Anzahl der Artikel im Warenkorb zu zählen, wird die Liste für den Warenkorb (hier:ItemInCartCounter) als Parameter für die Funktion angegeben\r\n  function Counter(counter) {\r\n    let totalCount = 0;\r\n    counter.forEach((element) => {\r\n      totalCount += element.count;\r\n    });\r\n    return totalCount;\r\n  }\r\n\r\n  return (\r\n    <Link to=\"/warenkorb\">\r\n      <button className=\"counterbutton\">\r\n        <div className=\"fas fa-shopping-cart\">\r\n          <div class=\"cartCounter\">{Counter(ItemInCartCounter)}</div>\r\n        </div>\r\n        Warenkorb\r\n      </button>\r\n    </Link>\r\n  );\r\n}\r\n","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Home.jsx",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Produkte.jsx",["56"],"import React from \"react\";\r\nimport \"../App.css\";\r\nimport './Produkte.css'\r\n\r\n\r\n\r\nfunction Produkte(props) {\r\n  const items = props.productLists;\r\n  const cartList = props.cartLists;\r\n\r\n  const addToCart = (itemToCheck) => {\r\n    //Kopie der Liste wird erstellt um im Folgenden bearbeitet werden zu können\r\n    let newCartItems = [...cartList];\r\n\r\n    let newItemIndex = newCartItems.findIndex(\r\n      (item) => item.name === itemToCheck.name //Herausfinden vom Index durch den Abgleich mit dem Namen\r\n    );\r\n\r\n    if (newItemIndex < 0) {\r\n      newCartItems.push({ ...itemToCheck, count: 1 }); \r\n      //Sollte der Index kleiner 0 für dieses bestimmte Item sein (also nicht gefunden), so wird es hinzugefügt\r\n    } else {\r\n      const newItem = {\r\n        ...newCartItems[newItemIndex],\r\n      };\r\n      newItem.count += 1;\r\n      newCartItems[newItemIndex] = newItem;\r\n      //Sollte dieses Item bereits im Warenkorb vorhanden sein, wird nur noch die Anzahl erhöht\r\n      //Bei vorhandenen Items erhöht sich somit die Anzahl um 1 pro Klick\r\n    }\r\n    props.setCarts([...newCartItems]); //Bearbeitete Kopie wird ausgegeben\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cardGrid\">\r\n        {/*Die Daten aus productList bzw. Liste.jsx werden mit der map-Funktion über dieses Card-Layout gemappt und ausgegeben.*/}\r\n        {items.map((item, key) => {\r\n          return (\r\n            <div className=\"cardBox\" key={key}>\r\n              <img className=\"cardImage\" src={item.image} />\r\n              <div className=\"cardContent\">\r\n                <h3 className=\"cardName\">{item.name}</h3>\r\n                <p className=\"cardDescription\">{item.description} €</p>\r\n                <div class=\"cardStars\">\r\n                  <div>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                  </div>\r\n                  <div className=\"cardRating\">Bewertungen</div>\r\n                </div>\r\n                <button className=\"cardButton\" onClick={() => addToCart(item)}>\r\n                  <div className=\"fas fa-shopping-cart\"></div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Produkte","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Warenkorb.jsx",["57"],"import React from 'react'\r\nimport './Warenkorb.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Warenkorb(props) {\r\n  const items = props.cartLists;\r\n\r\n  //deleteItem entfernt mit bei einem onClick die komplette Anzahl des Artikel das im Warenkorb befindlich ist\r\n  const deleteItem = (itemToDelete) => {\r\n    props.setCarts(items.filter((item) => item !== itemToDelete));\r\n  };\r\n\r\n  //increment erhöht die Anzahl des Artikels um 1 und ist in einem Button integriert\r\n  const increment = (index) => {\r\n    const newItems = [...items];\r\n    let incrementItemIndex = newItems.findIndex(\r\n      (item) => item.name === index.name\r\n    );\r\n    newItems[incrementItemIndex].count += 1;\r\n    props.setCarts(newItems);\r\n  };\r\n\r\n  //decrement senkt die Anzahl des Artikels um 1 und ist in einem Button integriert\r\n  const decrement = (index) => {\r\n    const newItems = [...items];\r\n    let decrementItemIndex = newItems.findIndex(\r\n      (item) => item.name === index.name\r\n    );\r\n    newItems[decrementItemIndex].count -= 1;\r\n    props.setCarts(newItems);\r\n  };\r\n\r\n  //addTotal enthält die Summe der in dem Warenkorb befindlichen Produkte, indem mittels reduce-Funktion \"accumulator\" mit dem aktuellen Wert addiert wird\r\n  var addTotal = items.reduce(function (accumulator, currentValue) {\r\n    return accumulator + currentValue.description * currentValue.count;\r\n  }, 0);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <header className=\"cartHeader\">\r\n          <div className=\"cartArticle\">Artikel:</div>\r\n          <div className=\"cartSumTop\">Summe: {addTotal} €</div>\r\n          <Link to=\"/checkout\">\r\n            <button className=\"cartCheckout\">Checkout</button>\r\n          </Link>\r\n        </header>\r\n        <hr className=\"cartLine\"></hr>\r\n        <div className=\"cartGrid\">\r\n          {items.map((item, key) => (\r\n            <div className=\"cartLayout\">\r\n              <div className=\"cartBox\" key={key}>\r\n                <img className=\"cartImage\" src={item.image} />\r\n                <h1 className=\"cartName\">{item.name}</h1>\r\n\r\n                <h1 className=\"cartDescription\">{item.description} €</h1>\r\n                <div className=\"cartButtons\">\r\n                  <button\r\n                    className=\"cartIncrement\"\r\n                    onClick={() => increment(item)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <p className=\"cartCount\">x {item.count}</p>\r\n                  <button\r\n                    className=\"cartDecrement\"\r\n                    onClick={() => decrement(item)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                  <button\r\n                    className=\"cartButton\"\r\n                    onClick={() => deleteItem(item)}\r\n                    title=\"Artikel entfernen\"\r\n                  >\r\n                    <div className=\"fa fa-trash\"></div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <hr className=\"cartLine\"></hr>\r\n        <div className=\"cartFooter\">\r\n          <div className=\"cartSum\">Summe: {addTotal} €</div>\r\n          <Link to=\"/checkout\">\r\n            <button className=\"cartCheckout\">Checkout</button>\r\n          </Link>\r\n        </div>\r\n        <hr className=\"cartLine\"></hr>\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Liste.jsx",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Checkout.jsx",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Services.jsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":10,"column":3,"nodeType":"68","messageId":"69","endLine":10,"endColumn":114},{"ruleId":"66","severity":1,"message":"67","line":11,"column":3,"nodeType":"68","messageId":"69","endLine":13,"endColumn":4},{"ruleId":"70","severity":1,"message":"71","line":41,"column":15,"nodeType":"72","endLine":41,"endColumn":61},{"ruleId":"70","severity":1,"message":"71","line":54,"column":17,"nodeType":"72","endLine":54,"endColumn":63},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]