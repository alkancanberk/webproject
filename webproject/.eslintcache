[{"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\index.js":"1","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\App.js":"2","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\reportWebVitals.js":"3","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Home.jsx":"4","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Checkout.jsx":"5","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Warenkorb.jsx":"6","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Liste.jsx":"7","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Services.jsx":"8","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Produkte.jsx":"9","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Credits.jsx":"10","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Komponenten\\Navbar.jsx":"11","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Komponenten\\Button.jsx":"12","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Komponenten\\Footer.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1915,"mtime":1613055684075,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":670,"mtime":1612300535549,"results":"18","hashOfConfig":"15"},{"size":7584,"mtime":1613409670479,"results":"19","hashOfConfig":"15"},{"size":4662,"mtime":1613055955428,"results":"20","hashOfConfig":"15"},{"size":3349,"mtime":1613409719577,"results":"21","hashOfConfig":"15"},{"size":1684,"mtime":1613050103934,"results":"22","hashOfConfig":"15"},{"size":2472,"mtime":1613050100672,"results":"23","hashOfConfig":"15"},{"size":3592,"mtime":1613147350841,"results":"24","hashOfConfig":"15"},{"size":1184,"mtime":1613231282563,"results":"25","hashOfConfig":"15"},{"size":1047,"mtime":1613050112110,"results":"26","hashOfConfig":"15"},{"size":692,"mtime":1613231291501,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1kgbwlf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\index.js",[],["62","63"],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\App.js",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\reportWebVitals.js",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Home.jsx",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Checkout.jsx",["64"],"import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport './Checkout.css'\r\n\r\n\r\n\r\n//Klasse welche ein Kontaktformular und eine Warenkorb Zusammenfassung zurÃ¼ckgibt\r\nexport default class Checkout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.items = props.cartLists;\r\n    this.addTotal = props.addTotal;\r\n    this.clickContent = this.clickContent.bind(this);\r\n    this.state = {\r\n      displayContent: false,\r\n    };\r\n  }\r\n  state = {\r\n    Vorname: \"\",\r\n    Nachname: \"\",\r\n    Ort: \"\",\r\n    StraÃŸeHausnummer: \"\",\r\n    Postleitzahl: \"\",\r\n    Email: \"\",\r\n  };\r\n\r\n  //Durch diese Funktion wird der state mit der aktuellen Eingabe des Benutzers fÃ¼r zum Beispiel den Vornamen aktualisiert\r\n  replace = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  //Durch diese Funktion kann man so oft wie mÃ¶glich auf den Button drÃ¼cken und der Inhalt wird immer gedisplayed\r\n  clickContent() {\r\n    this.setState({\r\n      displayContent: !this.state.displayContent, //entspricht dem Gegenteil von this.state.displayContent => also \"true\"\r\n    });\r\n  }\r\n  render() {\r\n    //Funktion zum Anzeigen des Gesamtpreises\r\n    var addTotal = this.items.reduce(function (accumulator, currentValue) {\r\n      return accumulator + currentValue.price * currentValue.count;\r\n    }, 0);\r\n\r\n    const { displayContent } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {/*Sollte der Warenkorb bzw. hier Checkout leer sein also this.items.length === 0, so wird der nachfolgende Text angezeigt*/}\r\n          {this.items.length === 0 && (\r\n            <div className=\"cartEmpty\">\r\n              <div className=\"cartEmptyTag\">Der Warenkorb ist leer!ðŸ˜œ</div>\r\n              <div className=\"cartEmptyTag\">\r\n                DrÃ¼ck mich!\r\n                <div className=\"fas fa-angle-double-down emptyArrow\"></div>\r\n              </div>\r\n              <Link to=\"/produkte\" className=\"cartEmptyImage\">\r\n                <img\r\n                  className=\"cartEmptyImage\"\r\n                  src=\"https://thumbs.dreamstime.com/b/traurige-tasse-kaffee-karikatur-43151368.jpg\"\r\n                />\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/*Ansonsten wird der normale Checkout angezeigt*/}\r\n        {this.items.length !== 0 && (\r\n          <>\r\n            <div className=\"checkoutContainer\">\r\n              <div className=\"checkoutInfo\">\r\n                <div>\r\n                  <div className=\"buttonLayout\">\r\n                    <button\r\n                      className=\"moreDetailsButton\"\r\n                      onClick={this.clickContent}\r\n                    >\r\n                      <div>\r\n                        <div>Bestelldetails</div>\r\n                        <div className=\"fas fa-angle-double-down check\"></div>\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                  {displayContent === true ? (\r\n                    <div className=\"checkoutButtonBox\">\r\n                      <div className=\"checkoutArticle\">Artikel:</div>\r\n                      {this.items.map((item, key) => (\r\n                        <div className=\"checkoutContent\" key={key}>\r\n                          <div className=\"checkoutName\">{item.name}</div>\r\n                          <div className=\"checkoutPrice\">{item.price} â‚¬</div>\r\n                          <div className=\"checkoutCount\">x {item.count}</div>\r\n                        </div>\r\n                      ))}\r\n                      <div className=\"checkoutHeader\">\r\n                        <div className=\"checkoutSum\">\r\n                          Summe: {addTotal.toFixed(2)} â‚¬\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                {/*Kontaktformular*/}\r\n                <form className=\"formLayout\">\r\n                  <h4>Bitte Kontaktformular ausfÃ¼llen:</h4>\r\n                  <div className=\"checkoutFormOne\">\r\n                    <div>\r\n                      <input\r\n                        className=\"checkoutLayer\"\r\n                        name=\"Vorname\"\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"Vorname\"\r\n                        value={this.state.Vorname}\r\n                        onChange={(event) => this.replace(event)}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        className=\"checkoutLayer\"\r\n                        name=\"Nachname\"\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"Nachname\"\r\n                        value={this.state.Nachname}\r\n                        onChange={(event) => this.replace(event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"checkoutFormTwo\">\r\n                    <div>\r\n                      <input\r\n                        className=\"checkoutLayer\"\r\n                        name=\"Ort\"\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"Ort\"\r\n                        value={this.state.Ort}\r\n                        onChange={(event) => this.replace(event)}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        className=\"checkoutLayer\"\r\n                        name=\"StraÃŸeHausnummer\"\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"StraÃŸe und Hausnummer\"\r\n                        value={this.state.StraÃŸeHausnummer}\r\n                        onChange={(event) => this.replace(event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"checkoutFormThree\">\r\n                    <div>\r\n                      <input\r\n                        className=\"checkoutLayer\"\r\n                        type=\"text\"\r\n                        name=\"Postleitzahl\"\r\n                        required\r\n                        placeholder=\"Postleitzahl\"\r\n                        value={this.state.Postleitzahl}\r\n                        onChange={(event) => this.replace(event)}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        className=\"checkoutLayer\"\r\n                        type=\"email\"\r\n                        x-moz-errormessage=\"Bitte gebe eine gÃ¼ltige E-Mail-Adresse ein.\"\r\n                        name=\"Email\"\r\n                        required\r\n                        placeholder=\"E-Mail\"\r\n                        value={this.state.Email}\r\n                        onChange={(event) => this.replace(event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"checkoutSubmitLayout\">\r\n                    <button className=\"checkoutSubmitButton\">\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"BestÃ¤tigen\"\r\n                        className=\"checkoutSubmitButton\"\r\n                        required\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Warenkorb.jsx",["65","66"],"import React from 'react'\r\nimport './Warenkorb.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Warenkorb(props) {\r\n  const items = props.cartLists;\r\n\r\n  //deleteItem entfernt bei einem onClick die komplette Anzahl der Artikel die im Warenkorb befindlich sind\r\n  const deleteItem = (itemToDelete) => {\r\n    props.setCarts(items.filter((item) => item !== itemToDelete));\r\n  };\r\n\r\n  //increment erhÃ¶ht die Anzahl des Artikels um 1 und ist in einem Button integriert\r\n  const increment = (index) => {\r\n    const newItems = [...items];\r\n    let incrementItemIndex = newItems.findIndex(\r\n      (item) => item.name === index.name\r\n    );\r\n    newItems[incrementItemIndex].count += 1;\r\n    props.setCarts(newItems);\r\n  };\r\n\r\n  //decrement senkt die Anzahl des Artikels um 1 und ist in einem Button integriert\r\n  const decrement = (index) => {\r\n    const newItems = [...items];\r\n    let decrementItemIndex = newItems.findIndex(\r\n      (item) => item.name === index.name\r\n    );\r\n    newItems[decrementItemIndex].count -= 1;\r\n    if (newItems[decrementItemIndex].count < 1){\r\n      return newItems[decrementItemIndex].count = 1 //Artikelmenge kann nicht negativ werden\r\n    }\r\n    props.setCarts(newItems);\r\n  };\r\n\r\n  //addTotal enthÃ¤lt die Summe der in dem Warenkorb befindlichen Produkte, indem mittels reduce-Funktion \"accumulator\" mit dem aktuellen Wert addiert wird\r\n  var addTotal = items.reduce(function (accumulator, currentValue) {\r\n    return accumulator + currentValue.price * currentValue.count;\r\n  }, 0);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {/*Sollte der Warenkorb leer sein also items.length === 0, so wird der nachfolgende Text angezeigt*/}\r\n          {items.length === 0 && (\r\n            <div className=\"cartEmpty\">\r\n              <div className=\"cartEmptyTag\">Der Warenkorb ist leer!ðŸ˜œ</div>\r\n              <div className=\"cartEmptyTag\">\r\n                DrÃ¼ck mich!\r\n                <div className=\"fas fa-angle-double-down emptyArrow\"></div>\r\n              </div>\r\n              <Link to=\"/produkte\" className=\"cartEmptyImage\">\r\n                <img\r\n                  className=\"cartEmptyImage\"\r\n                  src=\"https://thumbs.dreamstime.com/b/traurige-tasse-kaffee-karikatur-43151368.jpg\"\r\n                />\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/*Wird angezeigt wenn sich Artikel im Warenkorb befinden*/}\r\n        {items.length !== 0 && (\r\n          <>\r\n            <header className=\"cartHeader\">\r\n              <div className=\"cartArticle\">Artikel:</div>\r\n              <div className=\"cartSumTop\">Summe: {addTotal.toFixed(2)} â‚¬</div>\r\n              <Link to=\"/checkout\">\r\n                <button className=\"cartCheckout\">Checkout</button>\r\n              </Link>\r\n            </header>\r\n            <hr className=\"cartLine\"></hr>\r\n          </>\r\n        )}\r\n        <div className=\"cartGrid\">\r\n          {items.map((item, key) => (\r\n            <div className=\"cartLayout\">\r\n              <div className=\"cartBox\" key={key}>\r\n                <img className=\"cartImage\" src={item.image} />\r\n                <h1 className=\"cartName\">{item.name}</h1>\r\n\r\n                <h1 className=\"cartPrice\">{item.price} â‚¬</h1>\r\n                <div className=\"cartButtons\">\r\n                  <button\r\n                    className=\"cartIncrement\"\r\n                    onClick={() => increment(item)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <p className=\"cartCount\">x {item.count}</p>\r\n                  <button\r\n                    className=\"cartDecrement\"\r\n                    onClick={() => decrement(item)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                  <button\r\n                    className=\"cartButton\"\r\n                    onClick={() => deleteItem(item)}\r\n                    title=\"Artikel entfernen\"\r\n                  >\r\n                    <div className=\"fa fa-trash\"></div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/*Wird angezeigt wenn sich Artikel im Warenkorb befinden*/}\r\n        {items.length !== 0 && (\r\n          <>\r\n            <hr className=\"cartLine\"></hr>\r\n            <div className=\"cartFooter\">\r\n              <div className=\"cartSum\">Summe: {addTotal.toFixed(2)} â‚¬</div>\r\n              <Link to=\"/checkout\">\r\n                <button className=\"cartCheckout\">Checkout</button>\r\n              </Link>\r\n            </div>\r\n            <hr className=\"cartLine\"></hr>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Liste.jsx",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Services.jsx",[],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Produkte.jsx",["67"],"import React from \"react\";\r\nimport \"../App.css\";\r\nimport './Produkte.css'\r\n\r\n\r\n\r\nfunction Produkte(props) {\r\n  const items = props.productLists;\r\n  const cartList = props.cartLists;\r\n\r\n  //Funktion um Artikel in den Warenkorb zu speichern\r\n  const addToCart = (itemToCheck) => {\r\n    //Kopie der Liste wird erstellt um im Folgenden bearbeitet werden zu kÃ¶nnen\r\n    let newCartItems = [...cartList];\r\n\r\n    let newItemIndex = newCartItems.findIndex(\r\n      (item) => item.name === itemToCheck.name //Herausfinden vom Index durch den Abgleich mit dem Namen\r\n    );\r\n\r\n    if (newItemIndex < 0) {\r\n      newCartItems.push({ ...itemToCheck, count: 1 });\r\n      //Sollte der Index kleiner 0 fÃ¼r dieses bestimmte Item sein (also nicht gefunden), so wird es hinzugefÃ¼gt\r\n    } else {\r\n      const newItem = {\r\n        ...newCartItems[newItemIndex],\r\n      };\r\n      newItem.count += 1;\r\n      newCartItems[newItemIndex] = newItem;\r\n      //Sollte dieses Item bereits im Warenkorb vorhanden sein, wird nur noch die Anzahl erhÃ¶ht\r\n      //Bei vorhandenen Items erhÃ¶ht sich somit die Anzahl um 1 pro Klick\r\n    }\r\n    props.setCarts([...newCartItems]); //Bearbeitete Kopie wird ausgegeben\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cardGrid\">\r\n        {/*Die Daten aus productList bzw. Liste.jsx werden mit der map-Funktion Ã¼ber dieses Card-Layout gemappt und ausgegeben.*/}\r\n        {items.map((item, key) => {\r\n          return (\r\n            <div className=\"cardBox\" key={key}>\r\n              <img className=\"cardImage\" src={item.image} />\r\n              <div className=\"cardContent\">\r\n                <h3 className=\"cardName\">{item.name}</h3>\r\n                <p className=\"cardPrice\">{item.price} â‚¬</p>\r\n                <div class=\"cardStars\">\r\n                  <div>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                  </div>\r\n                  <div className=\"cardRating\">Premium Kaffee</div>\r\n                </div>\r\n                <button className=\"cardButton\" onClick={() => addToCart(item)}>\r\n                  <div className=\"fas fa-shopping-cart cartBrown\"></div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Produkte","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Seiten\\Credits.jsx",["68"],"import React, { Component } from 'react'\r\nimport \"./Credits.css\"\r\n\r\nconst Credits = () =>{\r\n    return (\r\n      <div className=\"creditsLayout\">\r\n        <div className=\"creditsLayoutTag\">\r\n          Diese Website und die hier vorgestellten Produkte, dienen fÃ¼r eine\r\n          Projektarbeit an der DHBW Mannheim fÃ¼r das Fach Web-Development.\r\n        </div>\r\n\r\n        <h3 className=\"creditsLayoutTagTwo\">Quellen:</h3>\r\n        <li className=\"creditsSource\">\r\n          FÃ¼r die Produktbilder https://www.roastmarket.de\r\n        </li>\r\n        <li className=\"creditsSource\">\r\n          FÃ¼r die verwendeten Icons https://fontawesome.com\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/s/p/speicherstadt-brasilien-doce-diamantina-250g-front.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/d/r/drago-mocambo-aroma-bio-fairtrade-250g.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/s/p/speicherstadt-kaffeemischung-front.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/g/o/gorilla-impianto-250g-front.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/d/r/drago_mocambo_gran_bar_250g.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/g/o/gorilla-superbar-crema-1kg-front.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/m/u/murnauer-casa-ruiz-250g-front.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/d/r/drago-mocambo-brasilia-1kg-vorne.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/s/p/speicherstadt-orang-utan-espresso-250g-front_1_4.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/d/r/drago-mocambo-gran-bar-1kg-front_2.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/d/r/drago-mocambo-suprema-1kg.jpg,\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://www.roastmarket.de/media/catalog/product/cache/1/small_image/235x353/9df78eab33525d08d6e5fb8d27136e95/m/u/murnauer-little-flower--indien-250g_1.jpg\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://thumbs.dreamstime.com/b/traurige-tasse-kaffee-karikatur-43151368.jpg\r\n        </li>\r\n        <li className=\"creditsLinks\">\r\n          https://cdn.wallpapersafari.com/99/74/Pa5b4Y.jpg\r\n        </li>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Credits","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Komponenten\\Navbar.jsx",["69"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"./Button\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\n//Navigationsleiste mit Attributen und einem Button fÃ¼r den Warenkorb\r\nconst Navbar = (props) => {\r\n  const ItemInCart = props.cartLists; \r\n  {/*Da der Button in der Navbar eine einzelne Komponente ist, muss dieser an Button.jsx weitergegeben werden.*/}\r\n\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navLogo\">\r\n        <Link to=\"/\" className=\"fas fa-coffee logoBrown\"></Link>\r\n        <h4>Kaffeetastisch</h4>\r\n      </div>\r\n      <ul className=\"navbarUL\">\r\n        <li className=\"navComponent\">\r\n          <Link to=\"/\" className=\"navLinks\">\r\n            <h3>Home</h3>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"navComponent\">\r\n          <Link to=\"/produkte\" className=\"navLinks\">\r\n            <h3>Produkte</h3>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"navComponent\">\r\n          <Link to=\"/services\" className=\"navLinks\">\r\n            <h3>Services</h3>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <Button ItemInCart={ItemInCart} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Komponenten\\Button.jsx",["70"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Button.css\";\r\n\r\n\r\n//Funktion die einen Button fÃ¼r einen Warenkorb generiert (mit Icon)\r\n\r\n\r\nexport function Button(props) {\r\n  const ItemInCartCounter = props.ItemInCart;\r\n  {\r\n    /*counter enthÃ¤lt nun die \"LÃ¤nge\" bzw. die Anzahl der im Warenkorb befindlichen Items.*/\r\n  }\r\n\r\n  //Diese Funktion zÃ¤hlt jedes Element und und speichert es in totalCount\r\n  //Um die Anzahl der Artikel im Warenkorb zu zÃ¤hlen, wird die Liste fÃ¼r den Warenkorb (hier:ItemInCartCounter) als Parameter fÃ¼r die Funktion angegeben\r\n  function Counter(counter) {\r\n    let totalCount = 0;\r\n    counter.forEach((element) => {\r\n      totalCount += element.count;\r\n    });\r\n    return totalCount;\r\n  }\r\n\r\n  return (\r\n    <Link to=\"/warenkorb\">\r\n      <button className=\"counterbutton\">\r\n        <div className=\"fas fa-shopping-cart blackLogo\">\r\n          <div class=\"cartCounter\">{Counter(ItemInCartCounter)}</div>\r\n        </div>\r\n        Warenkorb\r\n      </button>\r\n    </Link>\r\n  );\r\n}\r\n",["71","72"],"C:\\Users\\Anwender\\Desktop\\webproject\\webproject\\src\\Komponenten\\Footer.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":59,"column":17,"nodeType":"79","endLine":62,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":55,"column":17,"nodeType":"79","endLine":58,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":80,"column":17,"nodeType":"79","endLine":80,"endColumn":63},{"ruleId":"77","severity":1,"message":"78","line":42,"column":15,"nodeType":"79","endLine":42,"endColumn":61},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":10,"column":3,"nodeType":"86","messageId":"87","endLine":10,"endColumn":114},{"ruleId":"84","severity":1,"message":"85","line":11,"column":3,"nodeType":"86","messageId":"87","endLine":13,"endColumn":4},{"ruleId":"73","replacedBy":"88"},{"ruleId":"75","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["90"],["91"],"no-global-assign","no-unsafe-negation"]